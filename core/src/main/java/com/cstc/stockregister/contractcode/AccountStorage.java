package com.cstc.stockregister.contractcode;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int8;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class AccountStorage extends Contract {
    public static final String[] BINARY_ARRAY = {"","","","565b91505092915050565b6000602082840312156123f657600080fd5b600082013567ffffffffffffffff81111561241057600080fd5b61241c8482850161226b565b91505092915050565b60006020828403121561243757600080fd5b600082015167ffffffffffffffff81111561245157600080fd5b61245d848285016122c1565b91505092915050565b6000806040838503121561247957600080fd5b600083013567ffffffffffffffff81111561249357600080fd5b61249f8582860161226b565b925050602083013567ffffffffffffffff8111156124bc57600080fd5b6124c88582860161226b565b9150509250929050565b6124db816128c0565b82525050565b6124ea81612935565b82525050565b6124f981612947565b82525050565b612508816128cc565b82525050565b612517816128d6565b82525050565b61252681612959565b82525050565b600061253782612895565b80845261254b81602086016020860161297a565b612554816129ad565b602085010191505092915050565b600061256d8261288a565b80845261258181602086016020860161297a565b61258a816129ad565b602085010191505092915050565b6000815460018116600081146125b557600181146125d557612616565b607f600283041680865260ff198316602087015260408601935050612616565b600282048086526020860195506125eb85612878565b60005b8281101561260d578154818901526001820191506020810190506125ee565b80880195505050505b505092915050565b600060208201905061263360008301846124d2565b92915050565b600060208201905061264e60008301846124ff565b92915050565b6000602082019050612669600083018461250e565b92915050565b6000604082019050612684600083018561250e565b8181036020830152612696818461252c565b90509392505050565b60006020820190506126b4600083018461251d565b92915050565b600060208201905081810360008301526126d48184612562565b905092915050565b600060208201905081810360008301526126f6818461252c565b905092915050565b60006040820190508181036000830152612718818561252c565b905061272760208301846124e1565b9392505050565b60006040820190508181036000830152612748818561252c565b905061275760208301846124f0565b9392505050565b60006060820190508181036000830152612778818661252c565b905061278760208301856124f0565b61279460408301846124e1565b949350505050565b600060408201905081810360008301526127b68185612598565b905081810360208301526127ca818461252c565b90509392505050565b600060608201905081810360008301526127ed8186612598565b90508181036020830152612801818561252c565b90508181036040830152612815818461252c565b9050949350505050565b6000604051905081810181811067ffffffffffffffff8211171561284257600080fd5b8060405250919050565b600067ffffffffffffffff82111561286357600080fd5b601f19601f8301169050602081019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60008160000b9050919050565b60006128ee826128a0565b9050919050565b6000612900826128a0565b9050919050565b6000612912826128a0565b9050919050565b6000612924826128a0565b9050919050565b6000819050919050565b6000612940826128a0565b9050919050565b6000612952826128a0565b9050919050565b6000612964826128cc565b9050919050565b82818337600083830152505050565b60005b8381101561299857808201518184015260208101905061297d565b838111156129a7576000848401525b50505050565b6000601f19601f8301169050919050565b6129c6612cae565b600060208301905060408051908101604052808451815260200182815250915050919050565b6000808260000151612a108560000151866020015186600001518760200151612adf565b0190505b836000015184602001510181111515612a5c5781806001019250508260000151612a54856020015183038660000151038386600001518760200151612adf565b019050612a14565b5092915050565b612a6b612cae565b612a76838383612bc5565b5092915050565b606080600083600001516040519080825280601f01601f191660200182016040528015612ab95781602001602082028038833980820191505090505b509150602082019050612ad58185602001518660000151612c63565b8192505050919050565b60008060008060008060008060008b97508c8b111515612baf5760208b111515612b695760018b60200360080260020a03196001029550858a511694508a8d8d010393508588511692505b84600019168360001916141515612b61578388101515612b4e578c8c019850612bb5565b8780600101985050858851169250612b2a565b879850612bb5565b8a8a209150600096505b8a8d0387111515612bae578a88209050806000191682600019161415612b9b57879850612bb5565b6001880197508680600101975050612b73565b5b8c8c0198505b5050505050505050949350505050565b612bcd612cae565b6000612beb8560000151866020015186600001518760200151612adf565b90508460200151836020018181525050846020015181038360000181815250508460000151856020015101811415612c2d576000856000018181525050612c58565b8360000151836000015101856000018181510391508181525050836000015181018560200181815250505b829150509392505050565b60005b602082101515612c8b5782518452602084019350602083019250602082039150612c66565b6001826020036101000a0390508019835116818551168181178652505050505050565b6040805190810160405280600081526020016000815250905600a265627a7a72305820f3527a93a8fff77add8ac256b2748a624e467d3f55bfcac7a5a14fdc4c46553f6c6578706572696d656e74616cf50037"};

    public static final String BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","80604052506103eb9190810190612317565b94508573ffffffffffffffffffffffffffffffffffffffff1663d8ac59578a876040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104449291906126fe565b602060405180830381600087803b15801561045e57600080fd5b505af1158015610472573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104969190810190612340565b93506000925060008473ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561050257600080fd5b505af1158015610516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061053a91908101906123bb565b13156106fa57600192506106d88a600201805480602002602001604051908101604052809291908181526020016000905b82821015610627578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106135780601f106105e857610100808354040283529160200191610613565b820191906000526020600020905b8154815290600101906020018083116105f657829003601f168201915b50505050508152602001906001019061056b565b505050508573ffffffffffffffffffffffffffffffffffffffff16633dd2b61460006040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610681919061269f565b602060405180830381600087803b15801561069b57600080fd5b505af11580156106af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106d39190810190612369565b61145e565b90508060008151811015156106e957fe5b906020019060200201519150610712565b60679250602060405190810160405280600081525091505b8282975097505050505050509250929050565b6000806000606060008060009450600093506107dc896000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b50505050506113a1565b91506107e8898961159f565b8094508195505050606760000b8460000b1415610ad3578173ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561086357600080fd5b505af1158015610877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061089b9190810190612369565b90508073ffffffffffffffffffffffffffffffffffffffff16631a391cb48a6001018a6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016108f792919061279c565b600060405180830381600087803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16631a391cb48a600201600081548110151561095757fe5b90600052602060002001896040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161099b92919061279c565b600060405180830381600087803b1580156109b557600080fd5b505af11580156109c9573d6000803e3d6000fd5b505050506069945060018273ffffffffffffffffffffffffffffffffffffffff16634c6f30c08a846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a2a92919061272e565b602060405180830381600087803b158015610a4457600080fd5b505af1158015610a58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a7c91908101906123bb565b1415610ac957600194507f840af6505103e698454284833e43d4e002ba2608374cebb9fd17a49bae8fd7c2896000018989604051610abc939291906127d3565b60405180910390a1610ace565b606694505b610ad8565b606894505b84955050505050509392505050565b6000806000806000610b94886000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b8a5780601f10610b5f57610100808354040283529160200191610b8a565b820191906000526020600020905b815481529060010190602001808311610b6d57829003601f168201915b50505050506113a1565b93508373ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610bfa57600080fd5b505af1158015610c0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c329190810190612369565b92508373ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610c9857600080fd5b505af1158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cd09190810190612317565b91508273ffffffffffffffffffffffffffffffffffffffff16631a391cb489600101896040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d2c92919061279c565b600060405180830381600087803b158015610d4657600080fd5b505af1158015610d5a573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16631a391cb4896002016000815481101515610d8c57fe5b90600052602060002001886040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610dd092919061279c565b600060405180830381600087803b158015610dea57600080fd5b505af1158015610dfe573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663664b37d68885856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e5b9392919061275e565b602060405180830381600087803b158015610e7557600080fd5b505af1158015610e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ead91908101906123bb565b90506001811415610eff577f2e65800ed1c8078a20fd528c32902ecc9fc8ca9a5690aa7a6e9f970e2de71b53886000018888604051610eee939291906127d3565b60405180910390a160019450610f04565b606694505b505050509392505050565b600060606000806000806060610fc0896000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fb65780601f10610f8b57610100808354040283529160200191610fb6565b820191906000526020600020905b815481529060010190602001808311610f9957829003601f168201915b50505050506113a1565b94508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561102657600080fd5b505af115801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061105e9190810190612317565b93508473ffffffffffffffffffffffffffffffffffffffff1663d8ac595789866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110b79291906126fe565b602060405180830381600087803b1580156110d157600080fd5b505af11580156110e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111099190810190612340565b92506000915060008373ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561117557600080fd5b505af1158015611189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111ad91908101906123bb565b1315611352576001915061134b89600201805480602002602001604051908101604052809291908181526020016000905b8282101561129a578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112865780601f1061125b57610100808354040283529160200191611286565b820191906000526020600020905b81548152906001019060200180831161126957829003601f168201915b5050505050815260200190600101906111de565b505050508473ffffffffffffffffffffffffffffffffffffffff16633dd2b61460006040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112f4919061269f565b602060405180830381600087803b15801561130e57600080fd5b505af1158015611322573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113469190810190612369565b61145e565b905061138f565b60679150600060405190808252806020026020018201604052801561138b57816020015b60608152602001906001900390816113765790505b5090505b81819650965050505050509250929050565b600080600061100191508173ffffffffffffffffffffffffffffffffffffffff166359a48b65856040518263ffffffff167c010000000000","","565b91505092915050565b6000602082840312156123f657600080fd5b600082013567ffffffffffffffff81111561241057600080fd5b61241c8482850161226b565b91505092915050565b60006020828403121561243757600080fd5b600082015167ffffffffffffffff81111561245157600080fd5b61245d848285016122c1565b91505092915050565b6000806040838503121561247957600080fd5b600083013567ffffffffffffffff81111561249357600080fd5b61249f8582860161226b565b925050602083013567ffffffffffffffff8111156124bc57600080fd5b6124c88582860161226b565b9150509250929050565b6124db816128c0565b82525050565b6124ea81612935565b82525050565b6124f981612947565b82525050565b612508816128cc565b82525050565b612517816128d6565b82525050565b61252681612959565b82525050565b600061253782612895565b80845261254b81602086016020860161297a565b612554816129ad565b602085010191505092915050565b600061256d8261288a565b80845261258181602086016020860161297a565b61258a816129ad565b602085010191505092915050565b6000815460018116600081146125b557600181146125d557612616565b607f600283041680865260ff198316602087015260408601935050612616565b600282048086526020860195506125eb85612878565b60005b8281101561260d578154818901526001820191506020810190506125ee565b80880195505050505b505092915050565b600060208201905061263360008301846124d2565b92915050565b600060208201905061264e60008301846124ff565b92915050565b6000602082019050612669600083018461250e565b92915050565b6000604082019050612684600083018561250e565b8181036020830152612696818461252c565b90509392505050565b60006020820190506126b4600083018461251d565b92915050565b600060208201905081810360008301526126d48184612562565b905092915050565b600060208201905081810360008301526126f6818461252c565b905092915050565b60006040820190508181036000830152612718818561252c565b905061272760208301846124e1565b9392505050565b60006040820190508181036000830152612748818561252c565b905061275760208301846124f0565b9392505050565b60006060820190508181036000830152612778818661252c565b905061278760208301856124f0565b61279460408301846124e1565b949350505050565b600060408201905081810360008301526127b68185612598565b905081810360208301526127ca818461252c565b90509392505050565b600060608201905081810360008301526127ed8186612598565b90508181036020830152612801818561252c565b90508181036040830152612815818461252c565b9050949350505050565b6000604051905081810181811067ffffffffffffffff8211171561284257600080fd5b8060405250919050565b600067ffffffffffffffff82111561286357600080fd5b601f19601f8301169050602081019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60008160000b9050919050565b60006128ee826128a0565b9050919050565b6000612900826128a0565b9050919050565b6000612912826128a0565b9050919050565b6000612924826128a0565b9050919050565b6000819050919050565b6000612940826128a0565b9050919050565b6000612952826128a0565b9050919050565b6000612964826128cc565b9050919050565b82818337600083830152505050565b60005b8381101561299857808201518184015260208101905061297d565b838111156129a7576000848401525b50505050565b6000601f19601f8301169050919050565b6129c6612cae565b600060208301905060408051908101604052808451815260200182815250915050919050565b6000808260000151612a108560000151866020015186600001518760200151612adf565b0190505b836000015184602001510181111515612a5c5781806001019250508260000151612a54856020015183038660000151038386600001518760200151612adf565b019050612a14565b5092915050565b612a6b612cae565b612a76838383612bc5565b5092915050565b606080600083600001516040519080825280601f01601f191660200182016040528015612ab95781602001602082028038833980820191505090505b509150602082019050612ad58185602001518660000151612c63565b8192505050919050565b60008060008060008060008060008b97508c8b111515612baf5760208b111515612b695760018b60200360080260020a03196001029550858a511694508a8d8d010393508588511692505b84600019168360001916141515612b61578388101515612b4e578c8c019850612bb5565b8780600101985050858851169250612b2a565b879850612bb5565b8a8a209150600096505b8a8d0387111515612bae578a88209050806000191682600019161415612b9b57879850612bb5565b6001880197508680600101975050612b73565b5b8c8c0198505b5050505050505050949350505050565b612bcd612cae565b6000612beb8560000151866020015186600001518760200151612adf565b90508460200151836020018181525050846020015181038360000181815250508460000151856020015101811415612c2d576000856000018181525050612c58565b8360000151836000015101856000018181510391508181525050836000015181018560200181815250505b829150509392505050565b60005b602082101515612c8b5782518452602084019350602083019250602082039150612c66565b6001826020036101000a0390508019835116818551168181178652505050505050565b6040805190810160405280600081526020016000815250905600a265627a7a72305820c506cbf10030a125d3072025fde151c5187d90085a43879193fd40daf177514e6c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"account_obj_id_v\",\"type\":\"string\"}],\"name\":\"isExistAccountInfoSnapshot\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account_obj_id_v\",\"type\":\"string\"}],\"name\":\"getAccountInfoSnapshot\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account_obj_id\",\"type\":\"string\"}],\"name\":\"getAccountInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account_obj_id\",\"type\":\"string\"},{\"name\":\"_values\",\"type\":\"string\"}],\"name\":\"insertAccountInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account_obj_id_v\",\"type\":\"string\"},{\"name\":\"_values\",\"type\":\"string\"}],\"name\":\"generateAccountInfoSnapshot\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account_obj_id\",\"type\":\"string\"},{\"name\":\"_values\",\"type\":\"string\"}],\"name\":\"updateAccountInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tableName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"primaryKey\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"fields\",\"type\":\"string\"}],\"name\":\"InsertRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tableName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"primaryKey\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"fields\",\"type\":\"string\"}],\"name\":\"UpdateRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tableName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"primaryKey\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"fields\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"UpdateRecordError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"Debug\",\"type\":\"event\"}]"};

    public static final String ABI = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_ISEXISTACCOUNTINFOSNAPSHOT = "isExistAccountInfoSnapshot";

    public static final String FUNC_GETACCOUNTINFOSNAPSHOT = "getAccountInfoSnapshot";

    public static final String FUNC_GETACCOUNTINFO = "getAccountInfo";

    public static final String FUNC_INSERTACCOUNTINFO = "insertAccountInfo";

    public static final String FUNC_GENERATEACCOUNTINFOSNAPSHOT = "generateAccountInfoSnapshot";

    public static final String FUNC_UPDATEACCOUNTINFO = "updateAccountInfo";

    public static final Event INSERTRECORD_EVENT = new Event("InsertRecord", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATERECORD_EVENT = new Event("UpdateRecord", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATERECORDERROR_EVENT = new Event("UpdateRecordError", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event DEBUG_EVENT = new Event("Debug", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
    ;

    protected AccountStorage(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public Boolean isExistAccountInfoSnapshot(String account_obj_id_v) throws ContractException {
        final Function function = new Function(FUNC_ISEXISTACCOUNTINFOSNAPSHOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id_v)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public Tuple2<BigInteger, String> getAccountInfoSnapshot(String account_obj_id_v) throws ContractException {
        final Function function = new Function(FUNC_GETACCOUNTINFOSNAPSHOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id_v)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int8>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, String>(
                (BigInteger) results.get(0).getValue(), 
                (String) results.get(1).getValue());
    }

    public Tuple2<BigInteger, String> getAccountInfo(String account_obj_id) throws ContractException {
        final Function function = new Function(FUNC_GETACCOUNTINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int8>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, String>(
                (BigInteger) results.get(0).getValue(), 
                (String) results.get(1).getValue());
    }

    public TransactionReceipt insertAccountInfo(String account_obj_id, String _values) {
        final Function function = new Function(
                FUNC_INSERTACCOUNTINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_values)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insertAccountInfo(String account_obj_id, String _values, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERTACCOUNTINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_values)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsertAccountInfo(String account_obj_id, String _values) {
        final Function function = new Function(
                FUNC_INSERTACCOUNTINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_values)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, String> getInsertAccountInfoInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERTACCOUNTINFO, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertAccountInfoOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERTACCOUNTINFO, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int8>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt generateAccountInfoSnapshot(String account_obj_id_v, String _values) {
        final Function function = new Function(
                FUNC_GENERATEACCOUNTINFOSNAPSHOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id_v), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_values)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void generateAccountInfoSnapshot(String account_obj_id_v, String _values, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GENERATEACCOUNTINFOSNAPSHOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id_v), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_values)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGenerateAccountInfoSnapshot(String account_obj_id_v, String _values) {
        final Function function = new Function(
                FUNC_GENERATEACCOUNTINFOSNAPSHOT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id_v), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_values)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, String> getGenerateAccountInfoSnapshotInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GENERATEACCOUNTINFOSNAPSHOT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getGenerateAccountInfoSnapshotOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GENERATEACCOUNTINFOSNAPSHOT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int8>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt updateAccountInfo(String account_obj_id, String _values) {
        final Function function = new Function(
                FUNC_UPDATEACCOUNTINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_values)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void updateAccountInfo(String account_obj_id, String _values, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEACCOUNTINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_values)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateAccountInfo(String account_obj_id, String _values) {
        final Function function = new Function(
                FUNC_UPDATEACCOUNTINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(account_obj_id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_values)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, String> getUpdateAccountInfoInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEACCOUNTINFO, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateAccountInfoOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEACCOUNTINFO, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int8>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertRecordEventResponse> getInsertRecordEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTRECORD_EVENT, transactionReceipt);
        ArrayList<InsertRecordEventResponse> responses = new ArrayList<InsertRecordEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            InsertRecordEventResponse typedResponse = new InsertRecordEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.tableName = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.primaryKey = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.fields = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertRecordEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRECORD_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertRecordEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRECORD_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateRecordEventResponse> getUpdateRecordEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATERECORD_EVENT, transactionReceipt);
        ArrayList<UpdateRecordEventResponse> responses = new ArrayList<UpdateRecordEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UpdateRecordEventResponse typedResponse = new UpdateRecordEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.tableName = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.primaryKey = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.fields = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateRecordEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATERECORD_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateRecordEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATERECORD_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UpdateRecordErrorEventResponse> getUpdateRecordErrorEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATERECORDERROR_EVENT, transactionReceipt);
        ArrayList<UpdateRecordErrorEventResponse> responses = new ArrayList<UpdateRecordErrorEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UpdateRecordErrorEventResponse typedResponse = new UpdateRecordErrorEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.tableName = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.primaryKey = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.fields = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.msg = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUpdateRecordErrorEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATERECORDERROR_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUpdateRecordErrorEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATERECORDERROR_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<DebugEventResponse> getDebugEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DEBUG_EVENT, transactionReceipt);
        ArrayList<DebugEventResponse> responses = new ArrayList<DebugEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DebugEventResponse typedResponse = new DebugEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.msg = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeDebugEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(DEBUG_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeDebugEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(DEBUG_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static AccountStorage load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new AccountStorage(contractAddress, client, credential);
    }

    public static AccountStorage deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(AccountStorage.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class InsertRecordEventResponse {
        public TransactionReceipt.Logs log;

        public String tableName;

        public String primaryKey;

        public String fields;
    }

    public static class UpdateRecordEventResponse {
        public TransactionReceipt.Logs log;

        public String tableName;

        public String primaryKey;

        public String fields;
    }

    public static class UpdateRecordErrorEventResponse {
        public TransactionReceipt.Logs log;

        public String tableName;

        public String primaryKey;

        public String fields;

        public String msg;
    }

    public static class DebugEventResponse {
        public TransactionReceipt.Logs log;

        public String msg;
    }
}
